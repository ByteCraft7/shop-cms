# Generated by Django 4.2.17 on 2024-12-16 20:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import localflavor.in_.models
import phonenumber_field.modelfields
import shop.apps.user.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=255, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=255, verbose_name='Last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='Staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='Active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, null=True, verbose_name='Email Address')),
                ('username', models.CharField(max_length=64, unique=True, verbose_name='Username')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, null=True, region='IN', verbose_name='Phone Number')),
                ('email_verified', models.BooleanField(default=False, verbose_name='Verified Email')),
                ('phone_verified', models.BooleanField(default=False, verbose_name='Verified Phonenumber')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('B', 'Buyer'), ('S', 'Seller'), ('C', 'CEO')], db_index=True, max_length=4, verbose_name='User Profile Type')),
                ('level', models.PositiveSmallIntegerField(default=1, verbose_name='Seller or CEO level')),
                ('photo', models.ImageField(null=True, upload_to=shop.apps.user.models.upload_profile_photo_path, verbose_name='Profile Photo')),
                ('gstin', models.CharField(db_index=True, default=None, max_length=15, null=True, validators=[shop.apps.user.models.validate_length(15)], verbose_name='GSTIN Number')),
                ('pan', localflavor.in_.models.INPANCardNumberField(db_index=True, default=None, max_length=10, null=True, verbose_name='PAN Number')),
                ('upi', models.CharField(blank=True, db_index=True, max_length=45, null=True, unique=True, validators=[shop.apps.user.models.validate_upi], verbose_name='UPI ID')),
                ('tin', models.CharField(blank=True, db_index=True, max_length=11, null=True, unique=True, validators=[shop.apps.user.models.validate_length(11)], verbose_name='TIN Number')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='profile',
            constraint=models.UniqueConstraint(condition=models.Q(models.Q(('gstin', ''), _negated=True), ('gstin__isnull', False)), fields=('gstin',), name='unique_profile_gstin_ifnotnull'),
        ),
        migrations.AddConstraint(
            model_name='profile',
            constraint=models.UniqueConstraint(condition=models.Q(models.Q(('pan', ''), _negated=True), ('pan__isnull', False)), fields=('pan',), name='unique_pan_inprofile_ifnotnull'),
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.CheckConstraint(check=models.Q(('email__isnull', False), ('username__isnull', False), ('phone__isnull', False), _connector='OR'), name='not_all_null'),
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.UniqueConstraint(condition=models.Q(models.Q(('email', ''), _negated=True), ('email__isnull', False)), fields=('email',), name='unique_email_ifnotnull'),
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.UniqueConstraint(condition=models.Q(('phone__isnull', False)), fields=('phone',), name='unique_phone_ifnotnull'),
        ),
    ]
